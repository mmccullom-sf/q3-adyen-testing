import * as Effect from '@effect/io/Effect';
import type { O } from 'ts-toolbelt';
import { type CliConfig, type RcConfig } from '../config/types';
import type { Env } from '../env/create-env';
import type { GlobError, ReadConfigFileError, ReadFileError } from '../env/tags';
import type { NoSourcesFoundError } from '../get-package-json-files/get-file-paths';
import type { JsonParseError } from '../get-package-json-files/get-patterns/read-json-safe';
import type { PackageJsonFile } from '../get-package-json-files/package-json-file';
export interface Ctx {
    readonly config: {
        readonly cli: Partial<CliConfig>;
        readonly rcFile: O.Partial<RcConfig, 'deep'>;
    };
    isInvalid: boolean;
    packageJsonFiles: PackageJsonFile[];
}
export declare function getContext(): Effect.Effect<Partial<CliConfig> | Env, NoSourcesFoundError | GlobError | ReadFileError | JsonParseError | ReadConfigFileError, Ctx>;
