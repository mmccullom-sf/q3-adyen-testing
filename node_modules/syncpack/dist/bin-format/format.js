"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.format = void 0;
const Effect = __importStar(require("@effect/io/Effect"));
const is_array_1 = require("tightrope/guard/is-array");
const is_non_empty_string_1 = require("tightrope/guard/is-non-empty-string");
const is_object_1 = require("tightrope/guard/is-object");
const get_sort_az_1 = require("../config/get-sort-az");
const get_sort_first_1 = require("../config/get-sort-first");
function format(ctx) {
    const { packageJsonFiles } = ctx;
    const sortAz = (0, get_sort_az_1.getSortAz)(ctx.config);
    const sortFirst = (0, get_sort_first_1.getSortFirst)(ctx.config);
    packageJsonFiles.forEach((packageJsonFile) => {
        var _a, _b, _c;
        const { contents } = packageJsonFile;
        const sortedKeys = Object.keys(contents).sort();
        const keys = new Set(sortFirst.concat(sortedKeys));
        const optionalChaining = contents;
        const bugsUrl = (_a = optionalChaining === null || optionalChaining === void 0 ? void 0 : optionalChaining.bugs) === null || _a === void 0 ? void 0 : _a.url;
        const repoUrl = (_b = optionalChaining === null || optionalChaining === void 0 ? void 0 : optionalChaining.repository) === null || _b === void 0 ? void 0 : _b.url;
        const repoDir = (_c = optionalChaining === null || optionalChaining === void 0 ? void 0 : optionalChaining.repository) === null || _c === void 0 ? void 0 : _c.directory;
        if (bugsUrl) {
            contents.bugs = bugsUrl;
        }
        if ((0, is_non_empty_string_1.isNonEmptyString)(repoUrl) && !(0, is_non_empty_string_1.isNonEmptyString)(repoDir)) {
            contents.repository = repoUrl.includes('github.com')
                ? repoUrl.replace(/^.+github\.com\//, '')
                : repoUrl;
        }
        sortAz.forEach((key) => sortAlphabetically(contents[key]));
        sortObject(keys, contents);
    });
    return Effect.succeed(ctx);
    function sortObject(sortedKeys, obj) {
        sortedKeys.forEach((key) => {
            const value = obj[key];
            delete obj[key];
            obj[key] = value;
        });
    }
    function sortAlphabetically(value) {
        if ((0, is_array_1.isArray)(value)) {
            value.sort();
        }
        else if ((0, is_object_1.isObject)(value)) {
            sortObject(Object.keys(value).sort(), value);
        }
    }
}
exports.format = format;
