"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionsByNameStrategy = void 0;
const Function_1 = require("@effect/data/Function");
const get_1 = require("tightrope/fn/get");
const is_non_empty_object_1 = require("tightrope/guard/is-non-empty-object");
const filter_1 = require("tightrope/result/filter");
const map_1 = require("tightrope/result/map");
const tap_1 = require("tightrope/result/tap");
const delete_1 = require("../get-version-groups/lib/delete");
class VersionsByNameStrategy {
    constructor(name, path) {
        this._tag = 'versionsByName';
        this.name = name;
        this.path = path;
    }
    read(file) {
        const path = this.path;
        return (0, Function_1.pipe)((0, get_1.get)(file.contents, ...path.split('.')), (0, filter_1.filter)((is_non_empty_object_1.isNonEmptyObject), ''), (0, map_1.map)((Object.entries)));
    }
    write(file, [name, version]) {
        const path = this.path;
        const nextValue = version === delete_1.DELETE ? undefined : version;
        return (0, Function_1.pipe)((0, get_1.get)(file.contents, ...path.split('.')), (0, tap_1.tap)((parent) => {
            parent[name] = nextValue;
        }), (0, map_1.map)(() => file));
    }
}
exports.VersionsByNameStrategy = VersionsByNameStrategy;
