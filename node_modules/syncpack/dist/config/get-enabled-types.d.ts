import * as Data from '@effect/data/Data';
import * as Effect from '@effect/io/Effect';
import type { Ctx } from '../get-context';
import type { Strategy } from './get-custom-types';
declare const DeprecatedTypesError_base: new <A extends Record<string, any>>(args: Data.IsEqualTo<Omit<A, keyof import("@effect/data/Equal").Equal>, {}> extends true ? void : Omit<A, keyof import("@effect/data/Equal").Equal>) => Data.Data<A & {
    _tag: "DeprecatedTypesError";
}>;
export declare class DeprecatedTypesError extends DeprecatedTypesError_base<{
    readonly types: string[];
}> {
}
export declare function getEnabledTypes({ cli, rcFile, }: Ctx['config']): Effect.Effect<never, DeprecatedTypesError, Strategy.Any[]>;
export {};
