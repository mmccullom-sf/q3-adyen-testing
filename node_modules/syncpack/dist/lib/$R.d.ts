import type { AnyResult } from 'tightrope/fn/types';
import type { Result } from 'tightrope/result';
export declare const $R: {
    /**
     * Return a single `Ok<output[]>` containing an array of the output of every
     * `Result` returned by `getResult(input)` which succeeded, or a single
     * `Err<Error>` if none succeeded.
     */
    onlyOk<Input, Output = Input>(getResult: (value: Input) => Result<Output>): (inputs: Input[]) => Result<Output[]>;
    /** Log verbose only when Result is an Err */
    tapErrVerbose<T extends AnyResult>(result: T): T;
};
