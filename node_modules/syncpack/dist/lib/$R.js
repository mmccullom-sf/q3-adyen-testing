"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.$R = void 0;
const result_1 = require("tightrope/result");
const is_err_1 = require("tightrope/result/is-err");
const unwrap_1 = require("tightrope/result/unwrap");
const log_verbose_1 = require("./log-verbose");
exports.$R = {
    /**
     * Return a single `Ok<output[]>` containing an array of the output of every
     * `Result` returned by `getResult(input)` which succeeded, or a single
     * `Err<Error>` if none succeeded.
     */
    onlyOk(getResult) {
        return (inputs) => {
            const outputs = [];
            for (const value of inputs) {
                const result = getResult(value);
                if ((0, is_err_1.isErr)(result))
                    continue;
                outputs.push((0, unwrap_1.unwrap)(result));
            }
            return outputs.length > 0
                ? new result_1.Ok(outputs)
                : new result_1.Err(new Error('No Ok() returned by $R.onlyOk'));
        };
    },
    /** Log verbose only when Result is an Err */
    tapErrVerbose(result) {
        if ((0, is_err_1.isErr)(result))
            (0, log_verbose_1.logVerbose)(result.value);
        return result;
    },
};
