"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WriteFileError = exports.ReadYamlFileError = exports.ReadFileError = exports.ReadConfigFileError = exports.GlobError = exports.AskForInputError = exports.AskForChoiceError = exports.EnvTag = void 0;
const Context = __importStar(require("@effect/data/Context"));
const Data = __importStar(require("@effect/data/Data"));
exports.EnvTag = Context.Tag();
class AskForChoiceError extends Data.TaggedClass('AskForChoiceError') {
}
exports.AskForChoiceError = AskForChoiceError;
class AskForInputError extends Data.TaggedClass('AskForInputError') {
}
exports.AskForInputError = AskForInputError;
class GlobError extends Data.TaggedClass('GlobError') {
}
exports.GlobError = GlobError;
class ReadConfigFileError extends Data.TaggedClass('ReadConfigFileError') {
}
exports.ReadConfigFileError = ReadConfigFileError;
class ReadFileError extends Data.TaggedClass('ReadFileError') {
}
exports.ReadFileError = ReadFileError;
class ReadYamlFileError extends Data.TaggedClass('ReadYamlFileError') {
}
exports.ReadYamlFileError = ReadYamlFileError;
class WriteFileError extends Data.TaggedClass('WriteFileError') {
}
exports.WriteFileError = WriteFileError;
