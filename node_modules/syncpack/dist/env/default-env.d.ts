import type { O } from 'ts-toolbelt';
import type { RcConfig } from '../config/types';
export interface DefaultEnv {
    readonly askForChoice: (opts: {
        message: string;
        choices: string[];
    }) => Promise<string>;
    readonly askForInput: (opts: {
        message: string;
    }) => Promise<string>;
    readonly exitProcess: (code: number) => void;
    readonly globSync: (patterns: string[]) => string[];
    readonly readConfigFileSync: (configPath?: string) => O.Partial<RcConfig, 'deep'>;
    readonly readFileSync: (filePath: string) => string;
    readonly readYamlFileSync: <T = unknown>(filePath: string) => T;
    readonly writeFileSync: (filePath: string, contents: string) => void;
}
export declare const defaultEnv: DefaultEnv;
